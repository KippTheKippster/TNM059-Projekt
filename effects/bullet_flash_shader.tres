[gd_resource type="VisualShader" load_steps=10 format=3 uid="uid://ddv37mv08xtsn"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_803vd"]
default_input_values = [0, 0.0, 1, 3.0]
operator = 5

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_pg8nf"]
parameter_name = "Color1"

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_mnc5i"]
function = 0

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_7fybl"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(1, 1, 1, 1), 2, Quaternion(0.815, 0.815, 0.815, 0.815)]
op_type = 5

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_yebcs"]
parameter_name = "Color2"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_6t7qi"]
input_name = "time"

[sub_resource type="VisualShaderNodeRemap" id="VisualShaderNodeRemap_q61rw"]
default_input_values = [1, -1.0, 2, 1.0, 3, 0.0, 4, 1.0]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_d14n8"]
default_input_values = [0, 0.0, 1, 40.0]
operator = 2

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_dlq3x"]
parameter_name = "Speed"
default_value_enabled = true
default_value = 30.0

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, unshaded;

uniform vec4 Color1 : source_color;
uniform vec4 Color2 : source_color;
uniform float Speed = 30;



void fragment() {
// ColorParameter:2
	vec4 n_out2p0 = Color1;


// ColorParameter:5
	vec4 n_out5p0 = Color2;


// Input:6
	float n_out6p0 = TIME;


// FloatParameter:9
	float n_out9p0 = Speed;


// FloatOp:8
	float n_out8p0 = n_out6p0 * n_out9p0;


// FloatFunc:3
	float n_out3p0 = sin(n_out8p0);


	float n_out7p0;
// Remap:7
	float n_in7p1 = -1.00000;
	float n_in7p2 = 1.00000;
	float n_in7p3 = 0.00000;
	float n_in7p4 = 1.00000;
	{
		float __input_range = n_in7p2 - n_in7p1;
		float __output_range = n_in7p4 - n_in7p3;
		n_out7p0 = n_in7p3 + __output_range * ((n_out3p0 - n_in7p1) / __input_range);
	}


// FloatOp:10
	float n_in10p1 = 3.00000;
	float n_out10p0 = pow(n_out7p0, n_in10p1);


// Mix:4
	vec4 n_out4p0 = mix(n_out2p0, n_out5p0, vec4(n_out10p0));


// Output:0
	ALBEDO = vec3(n_out4p0.xyz);
	EMISSION = vec3(n_out4p0.xyz);


}
"
flags/unshaded = true
nodes/fragment/2/node = SubResource("VisualShaderNodeColorParameter_pg8nf")
nodes/fragment/2/position = Vector2(-400, 60)
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatFunc_mnc5i")
nodes/fragment/3/position = Vector2(-580, 460)
nodes/fragment/4/node = SubResource("VisualShaderNodeMix_7fybl")
nodes/fragment/4/position = Vector2(40, 220)
nodes/fragment/5/node = SubResource("VisualShaderNodeColorParameter_yebcs")
nodes/fragment/5/position = Vector2(-400, 220)
nodes/fragment/6/node = SubResource("VisualShaderNodeInput_6t7qi")
nodes/fragment/6/position = Vector2(-1060, 460)
nodes/fragment/7/node = SubResource("VisualShaderNodeRemap_q61rw")
nodes/fragment/7/position = Vector2(-400, 460)
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatOp_d14n8")
nodes/fragment/8/position = Vector2(-740, 440)
nodes/fragment/9/node = SubResource("VisualShaderNodeFloatParameter_dlq3x")
nodes/fragment/9/position = Vector2(-1040, 560)
nodes/fragment/10/node = SubResource("VisualShaderNodeFloatOp_803vd")
nodes/fragment/10/position = Vector2(-140, 420)
nodes/fragment/connections = PackedInt32Array(5, 0, 4, 1, 2, 0, 4, 0, 4, 0, 0, 0, 3, 0, 7, 0, 6, 0, 8, 0, 8, 0, 3, 0, 9, 0, 8, 1, 4, 0, 0, 5, 7, 0, 10, 0, 10, 0, 4, 2)
